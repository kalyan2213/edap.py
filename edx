


EDX

1
import pandas as pd
import matplotlib.pyplot as plt

# Sample data (Replace this with your actual data)
data = {
    'Year': [2018, 2019, 2020, 2021, 2022],
    'Sales': [50000, 55000, 60000, 52000, 58000]
}

# Creating a DataFrame
df = pd.DataFrame(data)

# Plotting the data
df.plot(x='Year', y='Sales', marker='o', linestyle='-')
plt.title('Automobile Sales Fluctuation from Year to Year')
plt.xlabel('Year')
plt.ylabel('Sales')
plt.grid(True)
plt.xticks(df['Year'])  # Ensure all years are displayed on x-axis
plt.tight_layout()
plt.show()


2

import pandas as pd
import matplotlib.pyplot as plt

# Sample data (Replace this with your actual data)
data = {
    'Year': [2018, 2019, 2020, 2021, 2022],
    'Sedan': [50000, 55000, 40000, 35000, 38000],
    'SUV': [30000, 32000, 28000, 25000, 27000],
    'Truck': [20000, 22000, 18000, 15000, 16000]
}

# Creating a DataFrame
df = pd.DataFrame(data)

# Plotting the data
plt.figure(figsize=(10, 6))

# Plotting lines for each vehicle type
plt.plot(df['Year'], df['Sedan'], marker='o', label='Sedan')
plt.plot(df['Year'], df['SUV'], marker='o', label='SUV')
plt.plot(df['Year'], df['Truck'], marker='o', label='Truck')

plt.title('Automobile Sales Fluctuation by Vehicle Type')
plt.xlabel('Year')
plt.ylabel('Sales')
plt.grid(True)
plt.xticks(df['Year'])  # Ensure all years are displayed on x-axis
plt.legend()
plt.tight_layout()
plt.show()


3
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Sample data (Replace this with your actual data)
data = {
    'Year': [2018, 2019, 2020, 2021, 2022],
    'Sedan': [50000, 55000, 40000, 35000, 38000],
    'SUV': [30000, 32000, 28000, 25000, 27000],
    'Truck': [20000, 22000, 18000, 15000, 16000]
}

# Creating a DataFrame
df = pd.DataFrame(data)

# Defining recession and non-recession periods
recession_years = [2020, 2021]  # Change this according to your dataset

# Melt the DataFrame to plot multiple lines
df_melted = df.melt(id_vars='Year', var_name='Vehicle Type', value_name='Sales')

# Plotting with Seaborn
plt.figure(figsize=(10, 6))
sns.lineplot(data=df_melted, x='Year', y='Sales', hue='Vehicle Type', marker='o')

# Highlighting recession and non-recession periods
for year in recession_years:
    plt.axvline(x=year, color='red', linestyle='--', alpha=0.5, label='Recession Period')

plt.title('Sales Trend per Vehicle Type: Recession vs Non-Recession Period')
plt.xlabel('Year')
plt.ylabel('Sales')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

4
import pandas as pd
import matplotlib.pyplot as plt

# Sample GDP data (Replace this with your actual data)
gdp_data = {
    'Year': [2018, 2019, 2020, 2021, 2022],
    'GDP': [20000, 21000, 19500, 18000, 19000]
}

# Sample recession period (Replace this with your actual data)
recession_years = [2020, 2021]

# Creating a DataFrame
gdp_df = pd.DataFrame(gdp_data)

# Create separate DataFrames for recession and non-recession periods
recession_df = gdp_df[gdp_df['Year'].isin(recession_years)]
non_recession_df = gdp_df[~gdp_df['Year'].isin(recession_years)]

# Create subplots
fig, axs = plt.subplots(1, 2, figsize=(12, 6))

# Plotting GDP during recession period
axs[0].plot(recession_df['Year'], recession_df['GDP'], marker='o', linestyle='-', color='red')
axs[0].set_title('GDP during Recession Period')
axs[0].set_xlabel('Year')
axs[0].set_ylabel('GDP')

# Plotting GDP during non-recession period
axs[1].plot(non_recession_df['Year'], non_recession_df['GDP'], marker='o', linestyle='-', color='blue')
axs[1].set_title('GDP during Non-Recession Period')
axs[1].set_xlabel('Year')
axs[1].set_ylabel('GDP')

plt.tight_layout()
plt.show()


5

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Sample data (Replace this with your actual data)
data = {
    'Month': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    'Sales': [100, 120, 140, 160, 180, 200, 220, 240, 220, 200, 180, 160],
    'Season': ['Winter', 'Winter', 'Spring', 'Spring', 'Spring', 'Summer', 'Summer', 'Summer', 'Fall', 'Fall', 'Fall', 'Winter']
}

# Creating a DataFrame
df = pd.DataFrame(data)

# Define the size of bubbles (you can scale this according to your data)
bubble_size = df['Sales'] * 10

# Define colors for different seasons
colors = {'Winter': 'blue', 'Spring': 'green', 'Summer': 'orange', 'Fall': 'red'}

# Plotting the bubble plot
plt.figure(figsize=(10, 6))
for season in colors.keys():
    plt.scatter(df[df['Season'] == season]['Month'], 
                df[df['Season'] == season]['Sales'], 
                s=bubble_size[df['Season'] == season], 
                c=colors[season], 
                alpha=0.5, 
                label=season)

plt.title('Impact of Seasonality on Automobile Sales')
plt.xlabel('Month')
plt.ylabel('Sales')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()


6
import pandas as pd
import matplotlib.pyplot as plt

# Sample data (Replace this with your actual data)
recession_sales_data = {
    'Year': [2020, 2021],
    'Sales Volume': [50000, 55000],  # Replace with actual sales volume during recession
    'Average Price': [25000, 26000]  # Replace with actual average price during recession
}

# Creating a DataFrame
recession_sales_df = pd.DataFrame(recession_sales_data)

# Plotting the scatter plot
plt.figure(figsize=(8, 6))
plt.scatter(recession_sales_df['Sales Volume'], recession_sales_df['Average Price'], color='red')
plt.title('Correlation Between Average Vehicle Price and Sales Volume During Recessions')
plt.xlabel('Sales Volume')
plt.ylabel('Average Price')
plt.grid(True)
plt.tight_layout()
plt.show()


7

import matplotlib.pyplot as plt

# Sample data (Replace this with your actual data)
advertising_expenditure = {
    'Recession': 200000,   # Replace with actual advertising expenditure during recession
    'Non-Recession': 300000  # Replace with actual advertising expenditure during non-recession
}

# Labels for the pie chart
labels = list(advertising_expenditure.keys())

# Values for the pie chart
values = list(advertising_expenditure.values())

# Colors for the pie chart
colors = ['red', 'green']

# Plotting the pie chart
plt.figure(figsize=(8, 6))
plt.pie(values, labels=labels, colors=colors, autopct='%1.1f%%', startangle=140)
plt.title('Portion of Advertising Expenditure of XYZAutomotives')
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.tight_layout()
plt.show()

8


import matplotlib.pyplot as plt

# Sample data (Replace this with your actual data)
advertisement_expenditure = {
    'Sedan': 50000,   # Replace with actual advertisement expenditure for Sedan during recession
    'SUV': 40000,     # Replace with actual advertisement expenditure for SUV during recession
    'Truck': 30000    # Replace with actual advertisement expenditure for Truck during recession
}

# Labels for the pie chart
labels = list(advertisement_expenditure.keys())

# Values for the pie chart
values = list(advertisement_expenditure.values())

# Plotting the pie chart
plt.figure(figsize=(8, 6))
plt.pie(values, labels=labels, autopct='%1.1f%%', startangle=140)
plt.title('Total Advertisement Expenditure for Each Vehicle Type During Recession Period')
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.tight_layout()
plt.show()


9

import pandas as pd
import matplotlib.pyplot as plt

# Sample data (Replace this with your actual data)
recession_sales_data = {
    'Month': ['Jan', 'Feb', 'Mar', 'Apr', 'May'],
    'Sedan Sales': [100, 120, 140, 160, 180],
    'SUV Sales': [80, 90, 100, 110, 120],
    'Unemployment Rate': [5.2, 5.5, 6.0, 6.5, 7.0]
}

# Creating a DataFrame
df = pd.DataFrame(recession_sales_data)

# Plotting the line plot
fig, ax1 = plt.subplots(figsize=(10, 6))

# Plotting sales data
ax1.plot(df['Month'], df['Sedan Sales'], marker='o', linestyle='-', color='blue', label='Sedan Sales')
ax1.plot(df['Month'], df['SUV Sales'], marker='o', linestyle='-', color='green', label='SUV Sales')
ax1.set_xlabel('Month')
ax1.set_ylabel('Sales')
ax1.tick_params(axis='y')
ax1.legend(loc='upper left')

# Creating a secondary y-axis for unemployment rate
ax2 = ax1.twinx()
ax2.plot(df['Month'], df['Unemployment Rate'], marker='s', linestyle='--', color='red', label='Unemployment Rate')
ax2.set_ylabel('Unemployment Rate (%)')
ax2.tick_params(axis='y')
ax2.legend(loc='upper right')

plt.title('Effect of Unemployment Rate on Vehicle Type and Sales During Recession Period')
plt.grid(True)
plt.tight_layout()
plt.show()


